
@incollection{li_efficient_2013,
  title = {Efficient batched synchronization in dropbox-like cloud storage services},
  timestamp = {2016-04-27T19:46:53Z},
  urldate = {2016-04-27},
  booktitle = {Middleware 2013},
  publisher = {{Springer}},
  author = {Li, Zhenhua and Wilson, Christo and Jiang, Zhefu and Liu, Yao and Zhao, Ben Y. and Jin, Cheng and Zhang, Zhi-Li and Dai, Yafei},
  year = {2013},
  pages = {307--327},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/G9A7VHEI/978-3-642-45065-5_16.html:;[PDF] from neu.edu:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/NNDDH7JR/Li et al. - 2013 - Efficient batched synchronization in dropbox-like .pdf:application/pdf}
}

@inproceedings{drago_inside_2012,
  title = {Inside dropbox: understanding personal cloud storage services},
  shorttitle = {Inside dropbox},
  timestamp = {2016-04-27T20:10:07Z},
  urldate = {2016-04-27},
  booktitle = {Proceedings of the 2012 {{ACM}} conference on {{Internet}} measurement conference},
  publisher = {{ACM}},
  author = {Drago, Idilio and Mellia, Marco and {M Munafo}, Maurizio and Sperotto, Anna and Sadre, Ramin and Pras, Aiko},
  year = {2012},
  pages = {481--494},
  file = {[PDF] from utwente.nl:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/2PEXBC6J/Drago et al. - 2012 - Inside dropbox understanding personal cloud stora.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/TZXT9E7C/citation.html:}
}

@article{lamport_time_1978,
  title = {Time, clocks, and the ordering of events in a distributed system},
  volume = {21},
  timestamp = {2016-04-27T14:51:27Z},
  number = {7},
  urldate = {2014-09-23},
  journal = {Communications of the ACM},
  author = {Lamport, Leslie},
  year = {1978},
  pages = {558--565},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/68BZ2EXA/citation.html:;time-clocks.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/78B6GF2X/time-clocks.pdf:application/pdf;[PDF] from citemaster.net:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/PGS4653G/Lamport - 1978 - Time, clocks, and the ordering of events in a dist.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/UKM49XF2/citation.html:}
}

@article{stoica_chord_2001,
  title = {Chord: {{A}} scalable peer-to-peer lookup service for internet applications},
  volume = {31},
  shorttitle = {Chord},
  timestamp = {2016-04-29T02:35:08Z},
  number = {4},
  urldate = {2014-09-23},
  journal = {ACM SIGCOMM Computer Communication Review},
  author = {Stoica, Ion and Morris, Robert and Karger, David and Kaashoek, M. Frans and Balakrishnan, Hari},
  year = {2001},
  pages = {149--160},
  annote = {Peer-to-peer systems are dynamic and robust because no node is more important than any other node; this leads to fault tolerance and network adaptation, but also a significant challenge: how do you efficiently locate data in a peer-to-peer network? There is no one oracle that knows the location of everything to ask, so you have to engage in a game of telephone with other computers to find what you're looking for. How to efficiently go about this game is the problem that Chord solves. The innovation of the Chord system is the implementation of a \_key-node\_ data storage system. Unlike a key-value store where, given some key you are able to quickly find a value, the key-node store utilizes the key to report the location of the closest node that is assigned the key. It does this by utilizing a ring topology with a consistent hashing algorithm to assign key/identifiers pairs to each node in the network. The ring topology ensures that~ nodes that enter and exit the network minimize disruption (and they have implemented algorithms to handle failures and resizing of the network) - but more importantly it ensures the following two theorems, proved in the paper:1. Each node only has to store information about local nodes, about O(log \_N\_) and therefore lookups only require that same amount of information. 2. When the nth node leaves the network, with high probability only O(1/n) fraction of keys must be moved, ensuring load balancing.These are fantastic claims for the effeciency of a distributed system, and the authors do a very good job of demonstrating proofs for their claims; including probability density functions along with their simulation results to show the likelihood of the orders discussed above. I especially liked the idea that with a flat keyspace; names could be anything and DNS-style lookups might not be required in a network configured with Chord.My primary critique of this paper centers around the idea that every node can connect to every other node; as in the simulation. In section 6.1 they state that Chord can operate in two modes: \_iterative\_ where the requesting node makes routing requests until it finds the node it was looking for and \_recursive\_ where requests are forwarded along the network and then back again. The simulation that they reported was for the \_iterative\_ method. The problem is, that an \_iterative\_ method does require some routing capability alongside the nodes to send network traffic correctly to the right node. Clearly the authors had an Internet system in mind when they designed this; but what about a dynamic network topology? It would seem that in this case, the \_recursive\_ method would bog down the nodes in keyspace requests and that the O(log\textsuperscript{2} \_N\_) messages for routing updates would actually end up being O(\_N\_ log\textsuperscript{2} \_N\_).},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/8U6AJD7G/citation.html:;chord_sigcomm.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/EITB4QE2/chord_sigcomm.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/EVQ2M2Q3/citation.html:;[PDF] from psu.edu:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/VWGA2P8F/Stoica et al. - 2001 - Chord A scalable peer-to-peer lookup service for .pdf:application/pdf}
}

@article{kubiatowicz_oceanstore_2000,
  title = {Oceanstore: {{An}} architecture for global-scale persistent storage},
  volume = {35},
  shorttitle = {Oceanstore},
  timestamp = {2014-09-23T21:17:00Z},
  number = {11},
  urldate = {2014-09-23},
  journal = {ACM Sigplan Notices},
  author = {Kubiatowicz, John and Bindel, David and Chen, Yan and Czerwinski, Steven and Eaton, Patrick and Geels, Dennis and Gummadi, Ramakrishan and Rhea, Sean and Weatherspoon, Hakim and Weimer, Westley and {others}},
  year = {2000},
  pages = {190--201},
  annote = {OceanStore is an interesting paper - it explores the topic of persistent information storage in a world of many high performing, interconnected computing devices. The problem of storage is no longer local to a single machine (storage is cheap for that machine), because the machines outnumber humans. Therefore the multiple machines that a human uses in multiple locations will have to have access to the same information in a transparent, secure and durable manner. The question then becomes, where should that information be stored?
~
OceanStore proposes a uniform, distributed infrastructure for data storage (an ocean, not a cloud) based on the availability of connectivity and cheap storage; OceanStore is a data management layer on top of storage. The user will know nothing about where the data is located, just that it's always available. Importantly, OceanStore proposes a global infrastructure, meaning that only a world-wide disaster would cause data loss.
~
There seems to be no single innovation that you can point to in this paper; the innovation is rather the integration of several ideas into a concerted whole, with a particular emphasis on security. The first is the idea of using self-certifying path names that are hashed with identifiers to act as GUIDs for the objects in the data store, a second is the use of encryption for both read and write access control. The third is a way of using ECB encryption to ensure that block-level updates and block-based management of files can be implemented in a system that contains all encrypted files. A fourth is the distributed routing that combines attenuated bloom filters for pobabilistic routing with the Plaxton location based routing algorithm as a fall back.
~
The fifth idea is the use of Byzantine agreement protocols to handle serial updating in the network. A sixth is the use of deep archival storage for versioning, but also importantly using tornado or other erasure marking algorithms for deletion. Finally, the last idea (that I'll mention) is the use of introspection to maintain the cluster as it persists for a long time.
~
There are probably more ideas that I didn't mention that are embedded in this paper, but all of these ideas drive to one theme: a secure, global data infrastructure that provides low-latency access to a user's data anywhere. It's hard to critique these ideas; except to say that the emphasis on security, particularly in a global context is absolutely required and I approve of the authors focusing on it. One comment that I should make, though, is that OceanStore requires a global distributed network in order to function in the manner described; the implementation of such an infrastructure would require not just technological changes, but also policy and social ones as well.},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/FNRG8IBV/citation.html:;oceanstore-asplos.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/SA3WZVT9/oceanstore-asplos.pdf:application/pdf}
}

@article{lamport_paxos_2001,
  title = {Paxos made simple},
  volume = {32},
  timestamp = {2016-05-02T18:52:43Z},
  number = {4},
  urldate = {2014-11-03},
  journal = {ACM Sigact News},
  author = {Lamport, Leslie},
  year = {2001},
  pages = {18--25},
  file = {paxosMadeSimple.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/5WF9G52K/paxosMadeSimple.pdf:application/pdf;paxosMadeSimple.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/W6A4KIAI/paxosMadeSimple.pdf:application/pdf}
}

@article{terry_managing_1995,
  title = {Managing update conflicts in {{Bayou}}, a weakly connected replicated storage system},
  volume = {29},
  timestamp = {2014-10-01T19:18:57Z},
  urldate = {2014-10-01},
  journal = {ACM},
  author = {Terry, Douglas B. and Theimer, Marvin M. and Petersen, Karin and Demers, Alan J. and Spreitzer, Mike J. and Hauser, Carl H.},
  year = {1995},
  annote = {Mobile computing environments particularly those that involve laptops or cell phones have less than ideal connectivity. Laptops, even with the profusion of wireless networks will have generally less bandwidth traveling than their desktop counterparts attached to broadband lines. Cell phones are charged by the minute and most applications should not consider cellular connectivity as a constantly on pipe. Moreover, computing happens in scary places like in University libraries where folks undertaking bibliographic data entry may find themselves "subject to student hackers" (page 2, last paragraph of section 2.2).~
~
Bayou provides a data infrastructure for collaborative applications in such environments through an eventually consistent peer-to-peer data transfer protocol. Eventually consistent systems mean that if no new writes are added all applications will have the same state eventually depending on connectivity, latency, and various policies. The key innovation of this paper stems from thought about dealing with conflicts.~
~
Bayou nodes synchronize data routinely through "anti-entropy" protocols that are designed to synchronize write logs. Every write has a dependency check associated with it as well as an application-specific conflict resolution. Two servers exchange data compare their logs in time order then replay writes along with the conflict resolutions so that when the sync is done, both servers have the same data. These anti-entropy synchronizations happen on demand as clients and servers are connected to the network ensuring that everyone is updated eventually.~
~
Every write is marked tentative until some primary server responsible for the application deems it time to commit. Tentative writes must have conflict resolution applied in order to sort out the state of the data; but committed data is accepted without~ quorum. Even if the primary is not attached to the network, when it does become attached the commits will spread through the network. Having a primary seems like a useful and simple way of achieving a committed write, but it does add extra burdens to the network. The primary machine can't be down for long; and if that machine resides on campus or on a specific local network, it might be a long time before mobile devices can get commits, which could impair the functionality of many applications especially time sensitive ones like meeting schedulers.~
~
I think it is necessary that Bayou considered the access controls of a system like this - tentative writes and primary systems pose potential problems for access. On the one hand Bayou could be implemented on a trusted network, but the peer-to-peer sharing aspects are what make the eventual consistency work. However, the idea of a certificate purse doesn't seem too innovative; especially when keys might be shared in the same eventually consistent manner. The access control aspects seemed tacked on and could use more thought.~},
  file = {bayou.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/855BHFVP/bayou.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/F2HXDSBX/citation.html:}
}

@inproceedings{terry_session_1994,
  title = {Session guarantees for weakly consistent replicated data},
  timestamp = {2014-10-01T19:19:31Z},
  urldate = {2014-10-01},
  booktitle = {Parallel and {{Distributed Information Systems}}, 1994., {{Proceedings}} of the {{Third International Conference}} on},
  publisher = {{IEEE}},
  author = {Terry, Douglas B. and Demers, Alan J. and Petersen, Karin and Spreitzer, Mike J. and Theimer, Marvin M. and Welch, Brent B.},
  year = {1994},
  pages = {140--149},
  annote = {Applications that work on eventually consistent replica systems are highly available and scalable (not to mention simple to implement), however they suffer from a lack of guarantees concerning the order of reads and writes. My favorite example from the paper was someone who updates their password; but then immediately afterwards gets an incorrect password error when attempting to log in because the system is still reading the password from before the write of the new password. This is obviously not a good situation for users who may be confused about what happens in the background and such inconsistencies can cause application behaviors that may worsen the problem.
~
Terry et al. propose session guarantees; essentially four policies for how applications view data from the point of view of their own actions. These guarantees if requested and given from a server allow the application to view the weakly consistent system as a single server making transactions; but in no way correspond to atomicity in modern DBMSs. This paper is essentially additional work from the Bayou system where session guarantees are implemented in Bayou client-server interactions.
~
The guarantees themselves; Read your writes; monotonic reads; writes follow reads; and monotonic writes are familiar to those who have dealt with atomic transactions in other systems. The policies themselves scale from a minimal amount of required state to much more state required for each interaction - and the application can choose the level at which it requires operation.
~
Practically, these session guarantees are requested from the client to the server the client is interacting with; and the server can decide whether or not to provide the guarantee; there is no system wide effect. This system therefore assumes that clients really only interact with one server at a time and that a local view of the data is enough for the user to work with said guarantees. Certainly if the client is interacting with a primary server (meaning that the server is able to make commits) these guarantees should all be easily implantable. However, peer systems will probably not give any guarantees of the session, which leads to the original problem.
~
I believe that sessions work in Bayou systems with a variety of routinely available primary systems, but am skeptical about their practicality in general. Since these guarantees are essentially at the local level; they are important to individual applications interacting with a single server, but are not a complete or sufficient solution; the application will still need to deal with tentative data that may or may not have conflict resolutions.},
  file = {[HTML] from parc.com:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/2BP4AII2/www.parc.com.html:;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/G2RVX28B/cookiedetectresponse.html:;sessionGuarantees.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/HECFA9XG/sessionGuarantees.pdf:application/pdf}
}

@inproceedings{chandra_paxos_2007,
  title = {Paxos made live: an engineering perspective},
  shorttitle = {Paxos made live},
  timestamp = {2016-05-02T18:52:41Z},
  urldate = {2014-11-03},
  booktitle = {Proceedings of the twenty-sixth annual {{ACM}} symposium on {{Principles}} of distributed computing},
  publisher = {{ACM}},
  author = {Chandra, Tushar D. and Griesemer, Robert and Redstone, Joshua},
  year = {2007},
  pages = {398--407},
  file = {paxosMadeLive.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/C23KPREV/paxosMadeLive.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/F72IUQUM/citation.html:;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/GHN8T7NI/citation.html:;paxosMadeLive.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/VXVIGPGK/paxosMadeLive.pdf:application/pdf}
}

@article{vogels_eventually_2009,
  title = {Eventually consistent},
  volume = {52},
  timestamp = {2016-04-29T00:58:02Z},
  number = {1},
  urldate = {2016-04-29},
  journal = {Communications of the ACM},
  author = {Vogels, Werner},
  year = {2009},
  pages = {40--44},
  file = {[PDF] from psu.edu:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/BCJMUF23/Vogels - 2009 - Eventually consistent.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/SZVPHTEF/citation.html:}
}

@inproceedings{decandia_dynamo_2007,
  title = {Dynamo: amazon's highly available key-value store},
  volume = {41},
  shorttitle = {Dynamo},
  timestamp = {2016-04-27T14:53:01Z},
  urldate = {2014-10-15},
  booktitle = {{{ACM SIGOPS Operating Systems Review}}},
  publisher = {{ACM}},
  author = {DeCandia, Giuseppe and Hastorun, Deniz and Jampani, Madan and Kakulapati, Gunavardhan and Lakshman, Avinash and Pilchin, Alex and Sivasubramanian, Swaminathan and Vosshall, Peter and Vogels, Werner},
  year = {2007},
  pages = {205--220},
  annote = {Dynamo is another production-grade distributed data service that meets the specific needs of a major web application. However, Dynamo does seem to have more general design principles compared to GFS. Specifically the problem that Dynamo is trying to address is the fact that most of their web application dependencies do not involve relationships; that is lookups and writes are to a single key in a single table. Relational databases have a lot of overhead to provide ACID transactions on related data and do not scale or partition well. If single key GET and PUT operations are all that's required of the data store, Amazon hopes to trade on consistency to ensure a highly available system that is partition tolerant.~

Dynamo seems to be an implementation of many of the papers we've read so far, especially Chord and the idea of distributed hash tables). It also borrows ideas to a lesser extent from Oceanstore in terms of routing and versioning, Bayou in terms of anti-entropy, and Ori in terms of replication (and this paper mentions other file systems that we haven't read that probably also contribute significantly to the architecture). Versions are stored with vector clocks and routing is handled by fingerprint tables stored on each node. Consistency is handled by quorum and ring membership and failures are handled through a gossip synchronization protocol.~

In all, it seems that the application-specific requirements of Dynamo led to an implementation that was able to reduce the impact of the criticisms of earlier work. For example, because the key space is not hierarchical like a file system is, some of the anti-entropy and and Merckle tree synchronizations become a lot simpler. Because the data objects are small (usually less than a MB) no chunking is required around the key ring. Because Amazon owns the infrastructure, routing can be handled by tables on every node. Dynamo is a true peer to peer distributed system (no centralized services for maintenance) that has been heavily tuned to the requirements of Amazon applications.~},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/5J7C4EBG/citation.html:;amazonDynamo.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/AQH9AZHQ/amazonDynamo.pdf:application/pdf;[PDF] from harvard.edu:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/EIHW3SC8/DeCandia et al. - 2007 - Dynamo amazon's highly available key-value store.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/XDPRWZCW/citation.html:}
}

@inproceedings{glendenning_scalable_2011,
  title = {Scalable consistency in {{Scatter}}},
  timestamp = {2014-10-27T18:03:01Z},
  urldate = {2014-10-27},
  booktitle = {Proceedings of the {{Twenty-Third ACM Symposium}} on {{Operating Systems Principles}}},
  publisher = {{ACM}},
  author = {Glendenning, Lisa and Beschastnikh, Ivan and Krishnamurthy, Arvind and Anderson, Thomas},
  year = {2011},
  pages = {15--28},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/QPQTVPPB/citation.html:;scatter.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/UXXXGWRW/scatter.pdf:application/pdf}
}

@misc{mizerany_etcd_2016-1,
  title = {etcd: package raft},
  abstract = {Package raft sends and receives messages in the Protocol Buffer format defined in the raftpb package.},
  timestamp = {2016-05-02T18:52:36Z},
  urldate = {2016-04-28},
  publisher = {{CoreOS}},
  author = {Mizerany, Blake and Yicheng, Qin and Xiang, Li},
  month = apr,
  year = {2016},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/EZQNP29J/raft.html:;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/ZTN2HAZ6/raft.html:}
}

@inproceedings{bailis_bolt-causal_2013,
  title = {Bolt-on causal consistency},
  timestamp = {2014-10-30T13:43:41Z},
  urldate = {2014-10-30},
  booktitle = {Proceedings of the 2013 international conference on {{Management}} of data},
  publisher = {{ACM}},
  author = {Bailis, Peter and Ghodsi, Ali and Hellerstein, Joseph M. and Stoica, Ion},
  year = {2013},
  pages = {761--772},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/BDGP7QFW/citation.html:;[PDF] from berkeley.edu:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/NSZR8UTW/Bailis et al. - 2013 - Bolt-on causal consistency.pdf:application/pdf}
}

@inproceedings{lloyd_dont_2011,
  title = {Don't settle for eventual: scalable causal consistency for wide-area storage with {{COPS}}},
  shorttitle = {Don't settle for eventual},
  timestamp = {2014-11-06T15:44:10Z},
  urldate = {2014-11-06},
  booktitle = {Proceedings of the {{Twenty-Third ACM Symposium}} on {{Operating Systems Principles}}},
  publisher = {{ACM}},
  author = {Lloyd, Wyatt and Freedman, Michael J. and Kaminsky, Michael and Andersen, David G.},
  year = {2011},
  pages = {401--416},
  file = {cops-sosp11.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/MFVZE5AA/cops-sosp11.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/P352X5A8/citation.html:}
}

@article{corbett_spanner_2013,
  title = {Spanner: {{Google}}'s globally distributed database},
  volume = {31},
  shorttitle = {Spanner},
  timestamp = {2014-11-06T15:45:01Z},
  number = {3},
  urldate = {2014-11-06},
  journal = {ACM Transactions on Computer Systems (TOCS)},
  author = {Corbett, James C. and Dean, Jeffrey and Epstein, Michael and Fikes, Andrew and Frost, Christopher and Furman, J. J. and Ghemawat, Sanjay and Gubarev, Andrey and Heiser, Christopher and Hochschild, Peter and {others}},
  year = {2013},
  pages = {8},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/ESR9NREA/citation.html:;spanner-osdi2012.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/TEZW78D5/spanner-osdi2012.pdf:application/pdf}
}

@incollection{shapiro_conflict-free_2011,
  title = {Conflict-free replicated data types},
  timestamp = {2016-04-29T01:25:47Z},
  urldate = {2016-04-29},
  booktitle = {Stabilization, {{Safety}}, and {{Security}} of {{Distributed Systems}}},
  publisher = {{Springer}},
  author = {Shapiro, Marc and Pregui{\c c}a, Nuno and Baquero, Carlos and Zawirski, Marek},
  year = {2011},
  pages = {386--400},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/IRJEJG2Z/10.html:;[PDF] from inria.fr:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/N2DXG3CV/Shapiro et al. - 2011 - Conflict-free replicated data types.pdf:application/pdf}
}

@article{lakshman_cassandra_2010,
  title = {Cassandra: a decentralized structured storage system},
  volume = {44},
  shorttitle = {Cassandra},
  timestamp = {2016-04-29T01:37:26Z},
  number = {2},
  urldate = {2016-04-29},
  journal = {ACM SIGOPS Operating Systems Review},
  author = {Lakshman, Avinash and Malik, Prashant},
  year = {2010},
  pages = {35--40},
  file = {[PDF] from cam.ac.uk:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/DHCHP4CF/Lakshman and Malik - 2010 - Cassandra a decentralized structured storage syst.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/IRCWVWA9/citation.html:}
}

@inproceedings{feinberg2011project,
  title = {Project voldemort: reliable distributed storage},
  timestamp = {2016-04-29T01:39:15Z},
  booktitle = {Proceedings of the 10th {{IEEE International Conference}} on {{Data Engineering}}},
  author = {Feinberg, Alex},
  year = {2011}
}

@inproceedings{demers_epidemic_1987,
  title = {Epidemic algorithms for replicated database maintenance},
  timestamp = {2016-04-29T01:43:29Z},
  urldate = {2016-04-29},
  booktitle = {Proceedings of the sixth annual {{ACM Symposium}} on {{Principles}} of distributed computing},
  publisher = {{ACM}},
  author = {Demers, Alan and Greene, Dan and Hauser, Carl and Irish, Wes and Larson, John and Shenker, Scott and Sturgis, Howard and Swinehart, Dan and Terry, Doug},
  year = {1987},
  pages = {1--12},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/4WPFHMPQ/citation.html:}
}

@article{haeupler_simple_2015,
  title = {Simple, fast and deterministic gossip and rumor spreading},
  volume = {62},
  timestamp = {2016-04-29T01:51:24Z},
  number = {6},
  urldate = {2016-04-29},
  journal = {Journal of the ACM (JACM)},
  author = {Haeupler, Bernhard},
  year = {2015},
  pages = {47},
  file = {[PDF] from arxiv.org:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/8TCF7S5D/Haeupler - 2015 - Simple, fast and deterministic gossip and rumor sp.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/U99PWTT9/citation.html:}
}

@inproceedings{gray_dangers_1996,
  title = {The dangers of replication and a solution},
  volume = {25},
  timestamp = {2016-04-27T14:53:03Z},
  urldate = {2015-04-07},
  booktitle = {{{ACM SIGMOD Record}}},
  publisher = {{ACM}},
  author = {Gray, Jim and Helland, Pat and O'Neil, Patrick and Shasha, Dennis},
  year = {1996},
  pages = {173--182},
  file = {[PDF] from googlecode.com:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/3FKXD6NN/Gray et al. - 1996 - The dangers of replication and a solution.pdf:application/pdf;replicas.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/7K6KBZ6I/replicas.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/HV6DK48X/citation.html:;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/I2CVG87K/citation.html:}
}

@article{bailis_quantifying_2014,
  title = {Quantifying eventual consistency with {{PBS}}},
  volume = {23},
  timestamp = {2016-04-27T14:53:04Z},
  number = {2},
  urldate = {2015-04-07},
  journal = {The VLDB Journal},
  author = {Bailis, Peter and Venkataraman, Shivaram and Franklin, Michael J. and Hellerstein, Joseph M. and Stoica, Ion},
  year = {2014},
  pages = {279--302},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/662V4BGN/s00778-013-0330-1.html:;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/AKJCUEFB/s00778-013-0330-1.html:;[PDF] from bailis.org:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/HK83EDHA/Bailis et al. - 2014 - Quantifying eventual consistency with PBS.pdf:application/pdf;ec-pbs.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/SJE9D5BW/SJE9D5BW.pdf:application/pdf}
}

@incollection{aiyer_availability_2005,
  title = {On the availability of non-strict quorum systems},
  timestamp = {2016-04-29T02:07:55Z},
  urldate = {2016-04-29},
  booktitle = {Distributed {{Computing}}},
  publisher = {{Springer}},
  author = {Aiyer, Amitanand and Alvisi, Lorenzo and Bazzi, Rida A.},
  year = {2005},
  pages = {48--62},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/SFE232KM/11561927_6.html:}
}

@article{attiya_sequential_1994,
  title = {Sequential consistency versus linearizability},
  volume = {12},
  timestamp = {2016-04-29T02:37:24Z},
  number = {2},
  urldate = {2016-04-29},
  journal = {ACM Transactions on Computer Systems (TOCS)},
  author = {Attiya, Hagit and Welch, Jennifer L.},
  year = {1994},
  pages = {91--122},
  file = {[PDF] from mit.edu:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/KZ7PC3NF/Attiya and Welch - 1994 - Sequential consistency versus linearizability.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/SMKM3QIW/citation.html:}
}

@article{helland_immutability_2015,
  title = {Immutability changes everything},
  volume = {13},
  timestamp = {2016-04-27T15:47:15Z},
  number = {9},
  urldate = {2016-03-07},
  journal = {Queue},
  author = {Helland, Pat},
  year = {2015},
  pages = {40},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/4ASEZGFR/citation.html:;Immutability Changes Everything.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/V6KJNNEZ/Immutability Changes Everything.pdf:application/pdf}
}

@inproceedings{bailis_potential_2012,
  title = {The potential dangers of causal consistency and an explicit solution},
  timestamp = {2016-02-12T17:07:42Z},
  urldate = {2016-02-12},
  booktitle = {Proceedings of the {{Third ACM Symposium}} on {{Cloud Computing}}},
  publisher = {{ACM}},
  author = {Bailis, Peter and Fekete, Alan and Ghodsi, Ali and Hellerstein, Joseph M. and Stoica, Ion},
  year = {2012},
  pages = {22},
  file = {[PDF] from kelehers.me:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/EPIUBHBP/EPIUBHBP.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/JU2V4PV4/citation.html:}
}

@inproceedings{bermbach_eventual_2011,
  title = {Eventual consistency: {{How}} soon is eventual? {{An}} evaluation of {{Amazon S3}}'s consistency behavior},
  shorttitle = {Eventual consistency},
  timestamp = {2016-02-12T17:10:36Z},
  urldate = {2016-02-12},
  booktitle = {Proceedings of the 6th {{Workshop}} on {{Middleware}} for {{Service Oriented Computing}}},
  publisher = {{ACM}},
  author = {Bermbach, David and Tai, Stefan},
  year = {2011},
  pages = {1},
  file = {[PDF] from researchgate.net:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/HAUQIC3B/HAUQIC3B.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/IS7TJ2G9/citation.html:}
}

@inproceedings{ongaro_search_2014,
  title = {In search of an understandable consensus algorithm},
  timestamp = {2016-05-02T18:51:57Z},
  urldate = {2016-05-01},
  booktitle = {2014 {{USENIX Annual Technical Conference}} ({{USENIX ATC}} 14)},
  author = {Ongaro, Diego and Ousterhout, John},
  year = {2014},
  pages = {305--319},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/KSZZBIN9/ongaro.html:;raft.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/RZ7ME7SK/raft.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/UHBMJZDP/ongaro.html:;raft.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/WFQ5VNT6/raft.pdf:application/pdf}
}

@article{bailis_probabilistically_2012,
  title = {Probabilistically bounded staleness for practical partial quorums},
  volume = {5},
  timestamp = {2016-01-04T19:48:40Z},
  number = {8},
  urldate = {2016-01-04},
  journal = {Proceedings of the VLDB Endowment},
  author = {Bailis, Peter and Venkataraman, Shivaram and Franklin, Michael J. and Hellerstein, Joseph M. and Stoica, Ion},
  year = {2012},
  pages = {776--787},
  file = {[PDF] from arxiv.org:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/HZCTDXV8/Bailis et al. - 2012 - Probabilistically bounded staleness for practical .pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/MNX52TTT/citation.html:}
}

@article{liu_warranties_2014,
  title = {Warranties for faster strong consistency},
  timestamp = {2016-05-02T18:52:04Z},
  urldate = {2016-01-08},
  journal = {Proc. of the 11th USENIX NSDI},
  author = {Liu, Jed and Magrino, Tom and Arden, Owen and George, Michael D. and Myers, Andrew C.},
  year = {2014},
  file = {[PDF] from usenix.org:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/5JPQE3ZA/Liu et al. - 2014 - Warranties for faster strong consistency.pdf:application/pdf;[PDF] from usenix.org:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/G96QJCPZ/Liu et al. - 2014 - Warranties for faster strong consistency.pdf:application/pdf}
}

@article{mazieres_stellar_2015,
  title = {The stellar consensus protocol: {{A}} federated model for internet-level consensus},
  shorttitle = {The stellar consensus protocol},
  timestamp = {2016-05-02T18:51:53Z},
  urldate = {2016-02-04},
  journal = {Draft, Stellar Development Foundation, 15th May, available at: https://www. stellar. org/papers/stellarconsensus-protocol. pdf (accessed 23rd May, 2015)},
  author = {Mazieres, David},
  year = {2015},
  file = {stellar-consensus-protocol.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/3IMMD3FX/stellar-consensus-protocol.pdf:application/pdf;stellar-consensus-protocol.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/B3ERKJHX/stellar-consensus-protocol.pdf:application/pdf}
}

@inproceedings{moraru_there_2013,
  title = {There is more consensus in egalitarian parliaments},
  timestamp = {2016-05-02T18:51:51Z},
  urldate = {2016-04-27},
  booktitle = {Proceedings of the {{Twenty-Fourth ACM Symposium}} on {{Operating Systems Principles}}},
  publisher = {{ACM}},
  author = {Moraru, Iulian and Andersen, David G. and Kaminsky, Michael},
  year = {2013},
  pages = {358--372},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/4BR6WIEA/citation.html:;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/B8PQ8KAH/citation.html:;[PDF] from cmu.edu:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/DB5FRJUT/Moraru et al. - 2013 - There is more consensus in egalitarian parliaments.pdf:application/pdf;[PDF] from cmu.edu:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/Z5GDCHAP/Moraru et al. - 2013 - There is more consensus in egalitarian parliaments.pdf:application/pdf}
}

@inproceedings{moraru_egalitarian_2012-1,
  title = {Egalitarian paxos},
  timestamp = {2016-05-02T18:51:49Z},
  urldate = {2016-04-27},
  booktitle = {{{ACM Symposium}} on {{Operating Systems Principles}}},
  author = {Moraru, Iulian and Andersen, David G. and Kaminsky, Michael},
  year = {2012},
  file = {[PDF] from usenix.org:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/KNU6GNM5/Moraru et al. - 2012 - Egalitarian paxos.pdf:application/pdf;[PDF] from usenix.org:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/V22FKJX5/Moraru et al. - 2012 - Egalitarian paxos.pdf:application/pdf}
}

@article{lamport_fast_2006,
  title = {Fast paxos},
  volume = {19},
  timestamp = {2016-05-02T18:51:50Z},
  number = {2},
  urldate = {2016-04-27},
  journal = {Distributed Computing},
  author = {Lamport, Leslie},
  year = {2006},
  pages = {79--103},
  file = {[PDF] from microsoft.com:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/3TCA5W9F/Lamport - 2006 - Fast paxos.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/3X7TM9XF/s00446-006-0005-x.html:;[PDF] from microsoft.com:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/RFER345B/Lamport - 2006 - Fast paxos.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/RU8UAX87/s00446-006-0005-x.html:}
}

@article{howard_raft_2015,
  title = {Raft refloated: do we have consensus?},
  volume = {49},
  shorttitle = {Raft refloated},
  timestamp = {2016-05-02T18:51:38Z},
  number = {1},
  urldate = {2016-04-27},
  journal = {ACM SIGOPS Operating Systems Review},
  author = {Howard, Heidi and Schwarzkopf, Malte and Madhavapeddy, Anil and Crowcroft, Jon},
  year = {2015},
  pages = {12--21},
  file = {[PDF] from cam.ac.uk:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/9MU3AMIE/Howard et al. - 2015 - Raft refloated do we have consensus.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/BRIZHQK3/citation.html:;[PDF] from cam.ac.uk:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/X3HGUM7W/Howard et al. - 2015 - Raft refloated do we have consensus.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/XVH7AZ2V/citation.html:}
}

@article{herlihy_linearizability_1990,
  title = {Linearizability: {{A}} correctness condition for concurrent objects},
  volume = {12},
  shorttitle = {Linearizability},
  timestamp = {2016-04-29T02:35:09Z},
  number = {3},
  urldate = {2016-04-27},
  journal = {ACM Transactions on Programming Languages and Systems (TOPLAS)},
  author = {Herlihy, Maurice P. and Wing, Jeannette M.},
  year = {1990},
  pages = {463--492},
  file = {[PDF] from ic.ac.uk:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/6NIM4CPE/Herlihy and Wing - 1990 - Linearizability A correctness condition for concu.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/P59MG35M/citation.html:;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/TTEFTWWN/citation.html:;[PDF] from ic.ac.uk:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/U5GJKTM5/Herlihy and Wing - 1990 - Linearizability A correctness condition for concu.pdf:application/pdf}
}

@article{ahamad_causal_1990,
  title = {Causal memory: {{Definitions}}, implementation and programming},
  volume = {1},
  shorttitle = {Causal memory},
  timestamp = {2016-04-27T16:05:31Z},
  urldate = {2016-04-27},
  journal = {IEEE Transactions on Parallel and Distributed Systems},
  author = {Ahamad, Mustaque and Neiger, Gil and Kohli, Prince and Burns, James and Hutto, Phil and Anderson, T. E.},
  year = {1990},
  pages = {6--16}
}


