
@incollection{li_efficient_2013,
  title = {Efficient batched synchronization in dropbox-like cloud storage services},
  timestamp = {2016-04-27T19:46:53Z},
  urldate = {2016-04-27},
  booktitle = {Middleware 2013},
  publisher = {{Springer}},
  author = {Li, Zhenhua and Wilson, Christo and Jiang, Zhefu and Liu, Yao and Zhao, Ben Y. and Jin, Cheng and Zhang, Zhi-Li and Dai, Yafei},
  year = {2013},
  pages = {307--327},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/G9A7VHEI/978-3-642-45065-5_16.html:;[PDF] from neu.edu:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/NNDDH7JR/Li et al. - 2013 - Efficient batched synchronization in dropbox-like .pdf:application/pdf}
}

@inproceedings{drago_inside_2012,
  title = {Inside dropbox: understanding personal cloud storage services},
  shorttitle = {Inside dropbox},
  timestamp = {2016-04-27T20:10:07Z},
  urldate = {2016-04-27},
  booktitle = {Proceedings of the 2012 {{ACM}} conference on {{Internet}} measurement conference},
  publisher = {{ACM}},
  author = {Drago, Idilio and Mellia, Marco and {M Munafo}, Maurizio and Sperotto, Anna and Sadre, Ramin and Pras, Aiko},
  year = {2012},
  pages = {481--494},
  file = {[PDF] from utwente.nl:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/2PEXBC6J/Drago et al. - 2012 - Inside dropbox understanding personal cloud stora.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/TZXT9E7C/citation.html:}
}

@article{ongaro_search_2013,
  title = {In search of an understandable consensus algorithm},
  volume = {7},
  timestamp = {2016-02-12T17:34:46Z},
  urldate = {2014-11-06},
  journal = {Draft of October},
  author = {Ongaro, Diego and Ousterhout, John},
  year = {2013},
  file = {raft.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/WFQ5VNT6/raft.pdf:application/pdf}
}

@inproceedings{decandia_dynamo_2007,
  title = {Dynamo: amazon's highly available key-value store},
  volume = {41},
  shorttitle = {Dynamo},
  timestamp = {2016-04-27T14:53:01Z},
  urldate = {2014-10-15},
  booktitle = {{{ACM SIGOPS Operating Systems Review}}},
  publisher = {{ACM}},
  author = {DeCandia, Giuseppe and Hastorun, Deniz and Jampani, Madan and Kakulapati, Gunavardhan and Lakshman, Avinash and Pilchin, Alex and Sivasubramanian, Swaminathan and Vosshall, Peter and Vogels, Werner},
  year = {2007},
  pages = {205--220},
  annote = {Dynamo is another production-grade distributed data service that meets the specific needs of a major web application. However, Dynamo does seem to have more general design principles compared to GFS. Specifically the problem that Dynamo is trying to address is the fact that most of their web application dependencies do not involve relationships; that is lookups and writes are to a single key in a single table. Relational databases have a lot of overhead to provide ACID transactions on related data and do not scale or partition well. If single key GET and PUT operations are all that's required of the data store, Amazon hopes to trade on consistency to ensure a highly available system that is partition tolerant.~

Dynamo seems to be an implementation of many of the papers we've read so far, especially Chord and the idea of distributed hash tables). It also borrows ideas to a lesser extent from Oceanstore in terms of routing and versioning, Bayou in terms of anti-entropy, and Ori in terms of replication (and this paper mentions other file systems that we haven't read that probably also contribute significantly to the architecture). Versions are stored with vector clocks and routing is handled by fingerprint tables stored on each node. Consistency is handled by quorum and ring membership and failures are handled through a gossip synchronization protocol.~

In all, it seems that the application-specific requirements of Dynamo led to an implementation that was able to reduce the impact of the criticisms of earlier work. For example, because the key space is not hierarchical like a file system is, some of the anti-entropy and and Merckle tree synchronizations become a lot simpler. Because the data objects are small (usually less than a MB) no chunking is required around the key ring. Because Amazon owns the infrastructure, routing can be handled by tables on every node. Dynamo is a true peer to peer distributed system (no centralized services for maintenance) that has been heavily tuned to the requirements of Amazon applications.~},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/5J7C4EBG/citation.html:;amazonDynamo.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/AQH9AZHQ/amazonDynamo.pdf:application/pdf;[PDF] from harvard.edu:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/EIHW3SC8/DeCandia et al. - 2007 - Dynamo amazon's highly available key-value store.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/XDPRWZCW/citation.html:}
}

@misc{mizerany_etcd_2016,
  title = {etcd: package raft},
  abstract = {Package raft sends and receives messages in the Protocol Buffer format defined in the raftpb package.},
  timestamp = {2016-04-28T16:17:40Z},
  urldate = {2016-04-28},
  publisher = {{CoreOS}},
  author = {Mizerany, Blake and Yicheng, Qin and Xiang, Li},
  month = apr,
  year = {2016},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/EZQNP29J/raft.html:}
}

@article{corbett_spanner_2013,
  title = {Spanner: {{Google}}'s globally distributed database},
  volume = {31},
  shorttitle = {Spanner},
  timestamp = {2014-11-06T15:45:01Z},
  number = {3},
  urldate = {2014-11-06},
  journal = {ACM Transactions on Computer Systems (TOCS)},
  author = {Corbett, James C. and Dean, Jeffrey and Epstein, Michael and Fikes, Andrew and Frost, Christopher and Furman, J. J. and Ghemawat, Sanjay and Gubarev, Andrey and Heiser, Christopher and Hochschild, Peter and {others}},
  year = {2013},
  pages = {8},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/ESR9NREA/citation.html:;spanner-osdi2012.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/TEZW78D5/spanner-osdi2012.pdf:application/pdf}
}

@article{bailis_quantifying_2014,
  title = {Quantifying eventual consistency with {{PBS}}},
  volume = {23},
  timestamp = {2016-04-27T14:53:04Z},
  number = {2},
  urldate = {2015-04-07},
  journal = {The VLDB Journal},
  author = {Bailis, Peter and Venkataraman, Shivaram and Franklin, Michael J. and Hellerstein, Joseph M. and Stoica, Ion},
  year = {2014},
  pages = {279--302},
  file = {Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/662V4BGN/s00778-013-0330-1.html:;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/AKJCUEFB/s00778-013-0330-1.html:;[PDF] from bailis.org:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/HK83EDHA/Bailis et al. - 2014 - Quantifying eventual consistency with PBS.pdf:application/pdf;ec-pbs.pdf:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/SJE9D5BW/SJE9D5BW.pdf:application/pdf}
}

@inproceedings{bermbach_eventual_2011,
  title = {Eventual consistency: {{How}} soon is eventual? {{An}} evaluation of {{Amazon S3}}'s consistency behavior},
  shorttitle = {Eventual consistency},
  timestamp = {2016-02-12T17:10:36Z},
  urldate = {2016-02-12},
  booktitle = {Proceedings of the 6th {{Workshop}} on {{Middleware}} for {{Service Oriented Computing}}},
  publisher = {{ACM}},
  author = {Bermbach, David and Tai, Stefan},
  year = {2011},
  pages = {1},
  file = {[PDF] from researchgate.net:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/HAUQIC3B/HAUQIC3B.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/IS7TJ2G9/citation.html:}
}

@article{bailis_probabilistically_2012,
  title = {Probabilistically bounded staleness for practical partial quorums},
  volume = {5},
  timestamp = {2016-01-04T19:48:40Z},
  number = {8},
  urldate = {2016-01-04},
  journal = {Proceedings of the VLDB Endowment},
  author = {Bailis, Peter and Venkataraman, Shivaram and Franklin, Michael J. and Hellerstein, Joseph M. and Stoica, Ion},
  year = {2012},
  pages = {776--787},
  file = {[PDF] from arxiv.org:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/HZCTDXV8/Bailis et al. - 2012 - Probabilistically bounded staleness for practical .pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/MNX52TTT/citation.html:}
}

@article{howard_raft_2015,
  title = {Raft refloated: do we have consensus?},
  volume = {49},
  shorttitle = {Raft refloated},
  timestamp = {2016-04-27T15:57:45Z},
  number = {1},
  urldate = {2016-04-27},
  journal = {ACM SIGOPS Operating Systems Review},
  author = {Howard, Heidi and Schwarzkopf, Malte and Madhavapeddy, Anil and Crowcroft, Jon},
  year = {2015},
  pages = {12--21},
  file = {[PDF] from cam.ac.uk:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/9MU3AMIE/Howard et al. - 2015 - Raft refloated do we have consensus.pdf:application/pdf;Snapshot:/Users/benjamin/Library/Application Support/Zotero/Profiles/i8zmk51x.default/zotero/storage/XVH7AZ2V/citation.html:}
}


